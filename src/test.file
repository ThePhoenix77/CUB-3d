// void render_map(t_data *data)
// {
//     int x;
//     int y;
//     int img_width;
//     int img_height;
//     int color;
//     int offset_x = 10; // Offset from the top-left corner (adjust as needed)
//     int offset_y = 10;

//     y = 0;
//     img_width = data->map.width;
//     img_height = data->map.height;
//     while (y < data->map.height)
//     {
//         x = 0;
//         while (x < data->map.width)
//         {
//             color = color_cell_matching(data->map.grid[y][x]);
//             draw_rectangle(&data->img, 
//                            offset_x + x, 
//                            offset_y + y,
//                            CELL_SIZE, 
//                            CELL_SIZE, 
//                            color, 
//                            img_width, 
//                            img_height);
//             x++;
//         }
//         y++;
//     }
// }

// void render_player(t_data *data)
// {
//     int player_x;
//     int player_y;
//     int player_size;
//     int player_color;
//     int line_color;
//     int x_end;
//     int y_end;
//     int offset_x = 10; // Offset for minimap
//     int offset_y = 10;

//     player_x = (int)(data->player.x);
//     player_y = (int)(data->player.y);
//     player_size = 5; // Smaller player marker for minimap
//     player_color = 0xFF0000;
//     line_color = 0x00FF00;

//     // Transform player coordinates to minimap
//     int mini_x = offset_x + player_x;
//     int mini_y = offset_y + player_y;

//     draw_rectangle(&data->img, 
//                    mini_x - player_size / 2, 
//                    mini_y - player_size / 2,
//                    player_size, 
//                    player_size, 
//                    player_color, 
//                    data->map.width * CELL_SIZE, 
//                    data->map.height * CELL_SIZE);

//     // Player direction line
//     x_end = mini_x + (int)(data->player.dir_x * 20); // Shorter line for minimap
//     y_end = mini_y + (int)(data->player.dir_y * 20);
//     draw_line(&data->img, mini_x, mini_y, x_end, y_end, line_color);
// }